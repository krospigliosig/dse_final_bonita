# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiResultadosBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, aprobado: bool=None, comentario: str=None, postulante_id: str=None, puntaje: float=None):  # noqa: E501
        """ApiResultadosBody - a model defined in Swagger

        :param aprobado: The aprobado of this ApiResultadosBody.  # noqa: E501
        :type aprobado: bool
        :param comentario: The comentario of this ApiResultadosBody.  # noqa: E501
        :type comentario: str
        :param postulante_id: The postulante_id of this ApiResultadosBody.  # noqa: E501
        :type postulante_id: str
        :param puntaje: The puntaje of this ApiResultadosBody.  # noqa: E501
        :type puntaje: float
        """
        self.swagger_types = {
            'aprobado': bool,
            'comentario': str,
            'postulante_id': str,
            'puntaje': float
        }

        self.attribute_map = {
            'aprobado': 'aprobado',
            'comentario': 'comentario',
            'postulante_id': 'postulante_id',
            'puntaje': 'puntaje'
        }
        self._aprobado = aprobado
        self._comentario = comentario
        self._postulante_id = postulante_id
        self._puntaje = puntaje

    @classmethod
    def from_dict(cls, dikt) -> 'ApiResultadosBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The api_resultados_body of this ApiResultadosBody.  # noqa: E501
        :rtype: ApiResultadosBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aprobado(self) -> bool:
        """Gets the aprobado of this ApiResultadosBody.


        :return: The aprobado of this ApiResultadosBody.
        :rtype: bool
        """
        return self._aprobado

    @aprobado.setter
    def aprobado(self, aprobado: bool):
        """Sets the aprobado of this ApiResultadosBody.


        :param aprobado: The aprobado of this ApiResultadosBody.
        :type aprobado: bool
        """

        self._aprobado = aprobado

    @property
    def comentario(self) -> str:
        """Gets the comentario of this ApiResultadosBody.


        :return: The comentario of this ApiResultadosBody.
        :rtype: str
        """
        return self._comentario

    @comentario.setter
    def comentario(self, comentario: str):
        """Sets the comentario of this ApiResultadosBody.


        :param comentario: The comentario of this ApiResultadosBody.
        :type comentario: str
        """

        self._comentario = comentario

    @property
    def postulante_id(self) -> str:
        """Gets the postulante_id of this ApiResultadosBody.


        :return: The postulante_id of this ApiResultadosBody.
        :rtype: str
        """
        return self._postulante_id

    @postulante_id.setter
    def postulante_id(self, postulante_id: str):
        """Sets the postulante_id of this ApiResultadosBody.


        :param postulante_id: The postulante_id of this ApiResultadosBody.
        :type postulante_id: str
        """

        self._postulante_id = postulante_id

    @property
    def puntaje(self) -> float:
        """Gets the puntaje of this ApiResultadosBody.


        :return: The puntaje of this ApiResultadosBody.
        :rtype: float
        """
        return self._puntaje

    @puntaje.setter
    def puntaje(self, puntaje: float):
        """Sets the puntaje of this ApiResultadosBody.


        :param puntaje: The puntaje of this ApiResultadosBody.
        :type puntaje: float
        """

        self._puntaje = puntaje
